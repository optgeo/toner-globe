/// Water and waterway layers
module toner.layers.Water

import "../config/Colors.pkl"
import "../style.pkl"

/// Type definitions for layers
class LineLayer {
  id: String
  source: String
  `source-layer`: String
  minzoom: Int
  filter: Dynamic
  metadata: Mapping<String, Any>
  layout: Mapping<String, Any>
  paint: Mapping<String, Any>
}

class SymbolLayer {
  id: String
  source: String
  `source-layer`: String
  minzoom: Int
  filter: Dynamic
  metadata: Mapping<String, Any>
  layout: Mapping<String, Any>
  paint: Mapping<String, Any>
}

/// Main water bodies layer
water: Dynamic = new {
  ["id"] = "water"
  ["type"] = "fill"
  ["source"] = "openmaptiles"
  ["source-layer"] = "water"
  ["filter"] = new {
    "all"
    new { "!="; "brunnel"; "tunnel" }
    new { "=="; "$type"; "Polygon" }
    new { "!="; "intermittent"; 1 }
  }
  ["layout"] = new {
    ["visibility"] = "visible"
  }
  ["paint"] = new {
    ["fill-antialias"] = true
    ["fill-color"] = Colors.water
  }
}

/// Waterways layer
waterway: LineLayer = new LineLayer {
  id = "waterway"
  source = "openmaptiles"
  `source-layer` = "waterway"
  minzoom = 12
  filter = new { "all"; new { "!="; "class"; "river" } }
}

/// Water name labels on lakes (line placement)
water_name_lakeline: SymbolLayer = new SymbolLayer {
  id = "water_name_lakeline"
  source = "openmaptiles"
  `source-layer` = "water_name"
  minzoom = 7
  filter = new { "all"; new { "=="; "$type"; "LineString" }; new { "has"; "name" } }
  layout = new Mapping {
    ["symbol-placement"] = "line"
    ["symbol-spacing"] = 350
    ["text-field"] = "{name:ja}"
    ["text-font"] = new List { "migu1c-regular" }
    ["text-letter-spacing"] = 0.2
    ["text-max-width"] = 5
    ["text-rotation-alignment"] = "map"
    ["text-size"] = 14
    ["visibility"] = "visible"
  }
  paint = new Mapping {
    ["text-color"] = Colors.text.water
  }
}

/// Waterway name labels
water_name_way: SymbolLayer = new SymbolLayer {
  id = "water_name_way"
  source = "openmaptiles"
  `source-layer` = "waterway"
  minzoom = 14
  filter = new List { "all"; new List { "=="; "$type"; "LineString" }; new List { "has"; "name" } }
  layout = new Mapping {
    ["symbol-placement"] = "line"
    ["symbol-spacing"] = 200
    ["text-field"] = "{name:latin}"
    ["text-font"] = new List { "migu1c-regular" }
    ["text-max-width"] = 9
    ["text-rotation-alignment"] = "map"
    ["text-size"] = new Mapping {
      ["stops"] = new List {
        new List { 14; 12 }
        new List { 18; 19 }
      }
    }
    ["visibility"] = "visible"
  }
  paint = new Mapping {
    ["text-color"] = Colors.text.water
  }
}

/// Sea name labels
water_name_sea: SymbolLayer = new SymbolLayer {
  id = "water_name_sea"
  source = "openmaptiles"
  `source-layer` = "water_name"
  minzoom = 4
  filter = new List { "all"; new List { "=="; "$type"; "Point" }; new List { "!in"; "class"; "ocean"; "lake" } }
  layout = new Mapping {
    ["symbol-placement"] = "point"
    ["symbol-spacing"] = 250
    ["text-field"] = "{name:latin}"
    ["text-font"] = new List { "migu1c-regular" }
    ["text-letter-spacing"] = 0.1
    ["text-max-width"] = 6
    ["text-rotation-alignment"] = "map"
    ["text-size"] = 14
    ["text-transform"] = "none"
  }
  paint = new Mapping {
    ["text-color"] = Colors.text.water
  }
}

/// Ocean name labels
water_name_ocean: SymbolLayer = new SymbolLayer {
  id = "water_name_ocean"
  source = "openmaptiles"
  `source-layer` = "water_name"
  minzoom = 2
  filter = new List { "all"; new List { "=="; "$type"; "Point" }; new List { "=="; "class"; "ocean" } }
  layout = new Mapping {
    ["symbol-placement"] = "point"
    ["symbol-spacing"] = 350
    ["text-field"] = "{name:latin}"
    ["text-font"] = new List { "migu1c-regular" }
    ["text-letter-spacing"] = 0.2
    ["text-max-width"] = 5
    ["text-rotation-alignment"] = "map"
    ["text-size"] = 14
    ["text-transform"] = "uppercase"
  }
  paint = new Mapping {
    ["text-color"] = Colors.text.water
  }
}
