/// Label layers with Japanese localization
module toner.layers.Labels

import "../config/Colors.pkl"
import "Base.pkl"

/// Place labels for countries
place_country: SymbolLayer = new SymbolLayer {
  id = "place_country"
  source = "openmaptiles"
  `source-layer` = "place"
  minzoom = 3
  maxzoom = 12
  filter = new { "all"; new { "=="; "class"; "country" }; new { "=="; "$type"; "Point" } }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new List { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new List {
      ["step"] = new List {
        new List { 3; 11 }
        new List { 7; 17 }
      }
    }
    ["text-transform"] = "uppercase"
    ["visibility"] = "visible"
    ["text-anchor"] = "center"
    ["text-offset"] = new List { 0; 0 }
    ["text-max-width"] = 8
  }
  paint = new {
    ["text-color"] = Colors.text.country
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = new List {
      ["step"] = new List {
        new List { 3; 1 }
        new List { 7; 2 }
      }
    }
  }
}

/// Place labels for states/prefectures
place_state: SymbolLayer = new SymbolLayer {
  id = "place_state"
  source = "openmaptiles"
  `source-layer` = "place"
  minzoom = 4
  maxzoom = 14
  filter = new { "all"; new { "=="; "class"; "state" }; new { "=="; "$type"; "Point" } }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new { "interpolate"; new { "linear" }; new { "zoom" }; 4; 9; 8; 14 }
    ["text-transform"] = "uppercase"
    ["visibility"] = "visible"
    ["text-anchor"] = "center"
    ["text-offset"] = new { 0; 0 }
    ["text-max-width"] = 8
  }
  metadata = new {}
  paint = new {
    ["text-color"] = Colors.text.state
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = 1.5
  }
}

/// City labels
place_city: SymbolLayer = new SymbolLayer {
  id = "place_city"
  source = "openmaptiles"
  `source-layer` = "place"
  minzoom = 7
  filter = new { "all"; new { "=="; "class"; "city" }; new { "=="; "$type"; "Point" } }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new { "interpolate"; new { "linear" }; new { "zoom" }; 7; 10; 10; 12; 14; 16 }
    ["text-transform"] = "none"
    ["visibility"] = "visible"
    ["text-anchor"] = "center"
    ["text-offset"] = new { 0; 0 }
    ["text-max-width"] = 8
  }
  metadata = new {}
  paint = new {
    ["text-color"] = Colors.text.city
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = 1.5
  }
}

/// Town labels
place_town: SymbolLayer = new SymbolLayer {
  id = "place_town"
  source = "openmaptiles"
  `source-layer` = "place"
  minzoom = 9
  filter = new { "all"; new { "=="; "class"; "town" }; new { "=="; "$type"; "Point" } }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new { "interpolate"; new { "linear" }; new { "zoom" }; 9; 9; 12; 11; 16; 14 }
    ["text-transform"] = "none"
    ["visibility"] = "visible"
    ["text-anchor"] = "center"
    ["text-offset"] = new { 0; 0 }
    ["text-max-width"] = 8
  }
  metadata = new {}
  paint = new {
    ["text-color"] = Colors.text.town
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = 1.2
  }
}

/// Village labels
place_village: SymbolLayer = new SymbolLayer {
  id = "place_village"
  source = "openmaptiles"
  `source-layer` = "place"
  minzoom = 12
  filter = new { "all"; new { "=="; "class"; "village" }; new { "=="; "$type"; "Point" } }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new { "interpolate"; new { "linear" }; new { "zoom" }; 12; 8; 16; 12 }
    ["text-transform"] = "none"
    ["visibility"] = "visible"
    ["text-anchor"] = "center"
    ["text-offset"] = new { 0; 0 }
    ["text-max-width"] = 8
  }
  metadata = new {}
  paint = new {
    ["text-color"] = Colors.text.village
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = 1
  }
}

/// Highway/Road labels
road_highway_label: SymbolLayer = new SymbolLayer {
  id = "road_highway_label"
  source = "openmaptiles"
  `source-layer` = "transportation_name"
  minzoom = 9
  filter = new { "all"; new { "=="; "$type"; "LineString" }; new { "in"; "class"; "motorway"; "trunk" } }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new { "interpolate"; new { "linear" }; new { "zoom" }; 9; 8; 14; 10; 17; 12 }
    ["symbol-placement"] = "line"
    ["text-rotation-alignment"] = "map"
    ["text-pitch-alignment"] = "viewport"
    ["visibility"] = "visible"
  }
  metadata = new {}
  paint = new {
    ["text-color"] = Colors.text.road
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = 1
  }
}

/// Major road labels  
road_major_label: SymbolLayer = new SymbolLayer {
  id = "road_major_label"
  source = "openmaptiles"
  `source-layer` = "transportation_name"
  minzoom = 12
  filter = new { 
    "all"
    new { "=="; "$type"; "LineString" }
    new { "in"; "class"; "primary"; "secondary"; "tertiary" }
  }
  layout = new {
    ["text-field"] = new {
      "case"
      new { "has"; "name:ja" }
      new { "get"; "name:ja" }
      new { "get"; "name" }
    }
    ["text-font"] = new { "Noto Sans JP Regular"; "Open Sans Regular" }
    ["text-size"] = new { "interpolate"; new { "linear" }; new { "zoom" }; 12; 7; 16; 9 }
    ["symbol-placement"] = "line"
    ["text-rotation-alignment"] = "map"
    ["text-pitch-alignment"] = "viewport"
    ["visibility"] = "visible"
  }
  metadata = new {}
  paint = new {
    ["text-color"] = Colors.text.road
    ["text-halo-color"] = Colors.text.halo
    ["text-halo-width"] = 0.8
  }
}
